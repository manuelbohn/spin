// example call: webppl model-rsa.wppl

var all_objects = [
{ shape: "novel_object"},
{ shape: "familiar_object"}
]

var labels = ["novel_word","familiar_word"]


var lexicon1 = function(utterance, obj, sem_knowledge){
  utterance.label == "novel_word" ? obj.shape == "novel_object" :
  utterance.label == "familiar_word" ? flip(sem_knowledge) ?
    obj.shape == "familiar_object" :
  flip() ? obj.shape == "familiar_object" : obj.shape == "novel_object" :
  true
}

var lexicon2 = function(utterance, obj, sem_knowledge){
  // display(sem_knowledge)
  utterance.label == "novel_word" ? obj.shape == "familiar_object" :
  utterance.label == "familiar_word" ? flip(sem_knowledge) ?
    obj.shape == "familiar_object" :
  flip() ? obj.shape == "familiar_object" : obj.shape == "novel_object" :
  true
}


var lexicon3 = function(utterance, obj, sem_knowledge){
  // display(sem_knowledge)
  utterance.label == "novel_word" ? 0.5 : sem_knowledge
}


var lexiconObjects = {
"novel_word = novel_object": {
novel_object: "novel_word", familiar_object: "familiar_word"
},
"novel_word = familiar_object": {
novel_object: "familiar_word", familiar_object: "familiar_word"
},
}

var lexiconObject = {
"novel_word = novel_object": lexicon1,
"novel_word = familiar_object" : lexicon2
}

var utterancePrior = function(){ return uniformDraw([ {label: "novel_word"}, {label: "familiar_word"}]) }

var LexiconPrior = Categorical({vs: ["novel_word = novel_object","novel_word = familiar_object" ], ps: [1, 1]})

var logistic = function(x) {1 / (1 + Math.exp(-x))}

var sem_knowledge = 0.8;
var priorProbs = [0.5, 0.5];
var speakerOptimality = 2;

var literalListener = cache(function(utterance, lexiconName){
  Infer({method: "enumerate", model: function(){
    // var lexiconName = sample(LexiconPrior);
    // var lexicon = lexiconObject[lexiconName];
    var obj = sample( Categorical({vs: all_objects, ps: [.5,.5]}));
    // if ("label" in utterance) {
    //   var truthValue = lexicon(utterance, obj, sem_knowledge);
    //   condition(truthValue)
    // }
    if ("label" in utterance) {
      var truthValue = lexicon3(utterance, obj, sem_knowledge);
      // display(truthValue)
      condition(flip(truthValue) ? obj.shape == "familiar_object" : obj.shape == "novel_object")
    }
    return obj.shape
  }})
}, 10000)

var speaker = cache(function(obj, lexiconName){
  Infer({method: "enumerate", model: function(){
    var utterance = utterancePrior();
    var L0 = literalListener(utterance);
    factor(speakerOptimality * L0.score(obj.shape))
    return utterance
  }})
}, 10000)

var pragmaticListener = function(utterance){
  Infer({method: "enumerate", model: function(){
    // display('inside RSA = ' + sem_knowledge)
    // var lexiconName = sample(LexiconPrior);
    var obj = sample( Categorical({vs: all_objects, ps: priorProbs}));
    var S1 = speaker(obj, lexiconName);
    observe(S1, utterance)
    return obj.shape == "novel_object" ? 1 : 0
  }})
}

pragmaticListener({label: "novel_word"})
// literalListener({label: "familiar_word"}, "a")

// speaker({ shape: "novel_object"}, "novel_word = novel_object")
